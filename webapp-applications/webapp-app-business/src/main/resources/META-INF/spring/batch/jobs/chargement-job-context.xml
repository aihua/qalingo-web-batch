<?xml version="1.0" encoding="UTF-8"?>
<!--

    Most of the code in the Qalingo project is copyrighted Hoteia and licensed
    under the Apache License Version 2.0 (release version 0.7.0)
            http://www.apache.org/licenses/LICENSE-2.0

                      Copyright (c) Hoteia, 2012-2013
    http://www.hoteia.com - http://twitter.com/hoteia - contact@hoteia.com


-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jms="http://www.springframework.org/schema/jms"	
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
						http://www.springframework.org/schema/batch/spring-batch.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/jms 
						http://www.springframework.org/schema/jms/spring-jms-2.5.xsd">

	<!-- Configures core context -->
	<import resource="classpath*:qalingo-batch-common-context.xml" />

	<import resource="classpath:messages-config.xml" />
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5"/>
		<property name="maxPoolSize" value="10"/>
		<property name="queueCapacity" value="25"/>
	</bean>
	
	<!-- JMS : CONFIG -->
	<import resource="classpath:conf/spring/qalingo-core-jms.xml" />
	<import resource="classpath:conf/spring/qalingo-core-jms-template.xml" />
	<!-- QUARTZ/JMS : SYNC SERVER STATUS -->
	<import resource="classpath:conf/spring/qalingo-core-jms-quartz-sync-server-status.xml" />

	<!-- SCHEDULING PART -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
                <ref bean="syncServeurStatusCronTrigger" />
                <ref bean="emailCleanerCronTrigger" />
                <ref bean="serverStatusCleanerCronTrigger" />
			</list>
		</property>
	</bean>
	
	<!-- JMS : LISTEN ALL ACTIONS EMAIL NOTIFICATION -->
	<context:component-scan base-package="org.hoteia.qalingo.core.jms.notification.listener" />
	<jms:listener-container 
		container-type="default"
		concurrency="1-5" 
		connection-factory="connectionFactory" 
		acknowledge="transacted">
		<jms:listener destination="${email.notification.trigger.queue.name}" ref="emailNotificationMessageListener"></jms:listener>
	</jms:listener-container>
	
	<!-- JMS : LISTEN ALL ACTIONS FOR SEARCH INDEX -->
	<context:component-scan base-package="org.hoteia.qalingo.core.jms.searchindex.listener" />
	<jms:listener-container 
		container-type="default"
		concurrency="1-5" 
		connection-factory="connectionFactory" 
		acknowledge="transacted">
		<jms:listener destination="${search.index.trigger.queue.name}" ref="searchIndexTriggerQueueListener"></jms:listener>
	</jms:listener-container>
	
	<!-- JMS : LISTEN ALL ACTIONS FOR ENTITY AUDIT -->
	<context:component-scan base-package="org.hoteia.qalingo.core.jms.entityaudit.listener" />
	<jms:listener-container 
		container-type="default"
		concurrency="1-5" 
		connection-factory="connectionFactory" 
		acknowledge="transacted">
		<jms:listener destination="${entity.audit.trigger.queue.name}" ref="entityAuditQueueListener"></jms:listener>
	</jms:listener-container>

	<!-- EMAIL CLEANER -->
	<bean id="emailCleanerCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="emailCleanerJobDetail" />
		<property name="cronExpression" value="${batch.email.cleaner.cron}" />
	</bean>
	
	<bean id="emailCleanerJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="org.hoteia.qalingo.core.batch.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="jobEmailCleaner" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
			</map>
		</property>
	</bean>
	
	<job id="jobEmailCleaner" restartable="true" xmlns="http://www.springframework.org/schema/batch">
		<step id="stepEmailCleaner">
			<tasklet ref="emailCleanerTasklet" />
		</step>
		<listeners>
			<listener ref="stepListener"/>
		</listeners>
	</job>

	<bean id="emailCleanerTasklet" class="org.hoteia.qalingo.app.business.job.email.EmailCleanerTasklet">
		<property name="emailDao" ref="emailDao" />
	</bean>
	
    <!-- SERVER STATUS CLEANER -->
    <bean id="serverStatusCleanerCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="serverStatusCleanerJobDetail" />
        <property name="cronExpression" value="${batch.server.status.cleaner.cron}" />
    </bean>
    
    <bean id="serverStatusCleanerJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="org.hoteia.qalingo.core.batch.JobLauncherDetails" />
        <property name="group" value="quartz-batch" />
        <property name="jobDataAsMap">
            <map>
                <entry key="jobName" value="jobServerStatusCleaner" />
                <entry key="jobLocator" value-ref="jobRegistry" />
                <entry key="jobLauncher" value-ref="jobLauncher" />
            </map>
        </property>
    </bean>
    
    <job id="jobServerStatusCleaner" restartable="true" xmlns="http://www.springframework.org/schema/batch">
        <step id="stepServerStatusCleaner">
            <tasklet ref="serverStatusCleanerTasklet" />
        </step>
        <listeners>
            <listener ref="stepListener"/>
        </listeners>
    </job>
    
    <bean id="serverStatusCleanerTasklet" class="org.hoteia.qalingo.app.business.job.status.ServerStatusCleanerTasklet">
        <property name="serverDao" ref="serverDao" />
    </bean>

	<!-- EMAIL NOTIFICATION SYNC -->
	<job id="emailSyncJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="emailSyncStep">
			<tasklet>
				<chunk reader="emailSyncItemReader"
					   processor="emailSyncItemProcessor"
					   writer="emailSyncItemWriter"
	                   commit-interval="${batch.email.notification.commit.interval}" />
			</tasklet>
			<listeners>
				<listener ref="stepListener"/>
			</listeners>
		</step>
	</job>
	
	<bean id="emailSyncItemReader" class="org.hoteia.qalingo.app.business.job.email.process.EmailItemReader">
		<property name="emailDao" ref="emailDao" />
	</bean>
	
	<bean id="emailSyncItemProcessor" class="org.hoteia.qalingo.app.business.job.email.process.EmailItemProcessor">
		<property name="mailSender" ref="mailSender" />
		<property name="emailDao" ref="emailDao" />
	</bean>
	
	<bean id="emailSyncItemWriter" class="org.hoteia.qalingo.app.business.job.email.process.EmailItemWriter">
		<property name="emailDao" ref="emailDao" />
	</bean>


</beans>